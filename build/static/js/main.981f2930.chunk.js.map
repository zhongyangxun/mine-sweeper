{"version":3,"sources":["resource/fonts/digital-7/digital-7-mono.ttf","components/square/index.js","data/mine-pane/index.js","common/util.js","common/config.js","containers/mine-pane/config.js","containers/mine-pane/index.js","store/action-creators.js","store/action-types.js","components/board/index.js","containers/time-board/index.js","components/mine-counter/index.js","components/game-result/index.js","containers/game-result/index.js","containers/menu-item/index.js","containers/menu-item-grade/index.js","containers/menu-item-game/index.js","store/reducer.js","store/index.js","App.js","index.js"],"names":["module","exports","Square","props","value","open","mark","computedClasses","useMemo","markDisplay","markValue","openClass","markType","computeClass","className","onClick","onSquareClick","onContextMenu","e","onSquareContextMenu","defaultProps","React","memo","prevProps","nextProps","calcNeighborMineNum","pane","x","y","newPane","calculate","posX","posY","undefined","initMinePane","rowNum","mineNum","Array","i","fill","mineIndexs","length","Math","floor","putMines","randomNum","random","indexOf","push","getMineIndexs","initMinePaneState","minePane","isArray","paneState","row","j","item","id","paddingZero","toString","padStart","sleep","ms","Promise","resolve","setTimeout","gameResults","NOT_YET","WAIT","FAIL","WIN","gradeKeys","JUNIOR","MIDDLE","SENIOR","gameGrades","ROW_NUM","MINE_NUM","markTypes","MinePane","state","this","isStarted","setState","Boolean","bubble","isPositionInPane","isOpened","isMarked","prevState","result","resetResult","square","openAround","ended","togglePlayingStatus","openAll","sendFailResult","endGame","flat","filter","sendWinResult","window","alert","FLAG","QUESTION","itemMark","unmarkedMineNum","markMine","unmarkMine","startGame","waitResult","isFailed","onFail","isWinning","onWin","preventDefault","playing","paneGridStyle","display","gridTemplateColumns","gridTemplateRows","endedClass","style","map","rowIndex","itemIndex","key","handleSquareClick","handleSquareContextMenu","Component","connect","dispatch","type","batch","StyleWrapper","styled","div","digitalFont","Board","content","MAX_TIME","timer","TimeBoard","timing","useState","time","setTime","useEffect","clearTimeout","MineCounter","GameResult","MenuItem","data","activeIndex","setActiveIndex","title","submenu","index","callback","handleSubMenuClick","menuItem","activeInex","setGameGrade","grade","Object","keys","resetGame","reducer","action","obj","newState","JSON","parse","stringify","defaultGrade","defaultState","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","App","document","body","addEventListener","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.981f2930.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/digital-7-mono.58045dab.ttf\";","import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport './index.scss'\n\nfunction computeClass(props) {\n  const markDisplay = (!props.open || props.value === 0) && 'hide'\n  const markValue = props.open && `mine-mark-${props.value}`\n  const openClass = props.open ? 'open' : ''\n  const markType = `mark-${props.mark}`\n\n  return {\n    markDisplay,\n    markValue,\n    openClass,\n    markType\n  }\n}\n\nfunction Square(props) {\n  const { value, open, mark } = props\n  const computedClasses = useMemo(() => computeClass({ value, open, mark }), [value, open, mark])\n\n  return (\n    <div\n      className={`square border ${computedClasses.markType} ${computedClasses.openClass}` }\n      onClick={() => { props.onSquareClick() }}\n      onContextMenu={(e) => { props.onSquareContextMenu(e) }}\n    >\n      {\n        props.open && (\n          <div className={`mine-mark ${computedClasses.markDisplay} ${computedClasses.markValue}`}>\n            {props.value}\n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nSquare.propTypes = {\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]),\n  onSquareClick: PropTypes.func,\n  open: PropTypes.bool,\n  mark: PropTypes.string,\n  onSquareContextMenu: PropTypes.func\n}\n\nSquare.defaultProps = {\n  value: 0,\n  open: false,\n  mark: null\n}\n\nconst areEqual = (prevProps, nextProps) => (\n  prevProps.open === nextProps.open && prevProps.mark === nextProps.mark\n)\n\nexport default React.memo(Square, areEqual)\n","function getMineIndexs(rowNum, mineNum) {\n  const mineIndexs = []\n\n  for (let i = 0; i < mineNum; i++) {\n    let randomNum = null\n\n    do {\n      randomNum = Math.floor(Math.random() * rowNum * rowNum)\n    } while (mineIndexs.indexOf(randomNum) > -1)\n\n    mineIndexs.push(randomNum)\n  }\n  return mineIndexs\n}\n\nfunction calcNeighborMineNum(pane, x, y) {\n  const newPane = pane\n  function calculate(posX, posY) {\n    if (newPane[posX] !== undefined && newPane[posX][posY] !== undefined && typeof newPane[posX][posY] === 'number') {\n      newPane[posX][posY]++\n    }\n  }\n\n  calculate(x - 1, y - 1)\n  calculate(x - 1, y)\n  calculate(x - 1, y + 1)\n  calculate(x, y - 1)\n  calculate(x, y + 1)\n  calculate(x + 1, y - 1)\n  calculate(x + 1, y)\n  calculate(x + 1, y + 1)\n\n  return newPane\n}\n\nfunction putMines(pane, rowNum, mineIndexs) {\n  let newPane = pane\n\n  for (let i = 0; i < mineIndexs.length; i++) {\n    const x = Math.floor(mineIndexs[i] / rowNum)\n    const y = mineIndexs[i] % rowNum\n    newPane[x][y] = 'm'\n    newPane = calcNeighborMineNum(newPane, x, y)\n  }\n  return newPane\n}\n\nfunction initMinePane(rowNum, mineNum) {\n  let pane = new Array(rowNum)\n  for (let i = 0; i < rowNum; i++) {\n    pane[i] = (new Array(rowNum)).fill(0)\n  }\n\n  const mineIndexs = getMineIndexs(rowNum, mineNum)\n  pane = putMines(pane, rowNum, mineIndexs)\n  return pane\n}\n\nfunction initMinePaneState(minePane = []) {\n  if (!Array.isArray(minePane) || !minePane.length) {\n    return []\n  }\n\n  const paneState = []\n\n  for (let i = 0; i < minePane.length; i++) {\n    const row = minePane[i]\n    paneState[i] = (new Array(row.length)).fill({})\n    for (let j = 0; j < row.length; j++) {\n      const item = {\n        id: i * row.length + j,\n        value: minePane[i][j],\n        mark: null,\n        open: false\n      }\n      paneState[i][j] = item\n    }\n  }\n\n  return paneState\n}\n\nexport { initMinePane, initMinePaneState }\n","export const paddingZero = (value, length = 3) => value.toString().padStart(length, '0')\n\nexport const deepCopy = (obj) => JSON.parse(JSON.stringify(obj))\n\nexport const sleep = (ms = 300) => (\n  new Promise((resolve) => {\n    setTimeout(resolve, ms)\n  })\n)\n","const gameResults = {\n  NOT_YET: 'normal',\n  WAIT: 'wait',\n  FAIL: 'fail',\n  WIN: 'win'\n}\n\nconst gradeKeys = {\n  JUNIOR: 'JUNIOR',\n  MIDDLE: 'MIDDLE',\n  SENIOR: 'SENIOR'\n}\n\nconst gameGrades = {\n  [gradeKeys.JUNIOR]: {\n    ROW_NUM: 9,\n    MINE_NUM: 16\n  },\n  [gradeKeys.MIDDLE]: {\n    ROW_NUM: 16,\n    MINE_NUM: 40\n  },\n  [gradeKeys.SENIOR]: {\n    ROW_NUM: 25,\n    MINE_NUM: 99\n  }\n}\n\nexport { gameResults, gradeKeys, gameGrades }\n","const markTypes = {\n  FLAG: 'flag',\n  QUESTION: 'question'\n}\n\nconst MINE_SIGN = 'm'\n\nexport { markTypes, MINE_SIGN }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect, batch } from 'react-redux'\nimport Square from 'components/square'\nimport * as actions from 'store/action-creators'\nimport { initMinePane, initMinePaneState } from 'data/mine-pane'\nimport { sleep } from 'common/util'\nimport { gameResults } from 'common/config'\nimport { markTypes, MINE_SIGN } from './config'\nimport './index.scss'\n\nclass MinePane extends React.Component {\n  static propTypes = {\n    rowNum: PropTypes.number,\n    mineNum: PropTypes.number,\n    playing: PropTypes.bool,\n    isStarted: PropTypes.bool,\n    markMine: PropTypes.func,\n    unmarkMine: PropTypes.func,\n    waitResult: PropTypes.func,\n    sendFailResult: PropTypes.func,\n    resetResult: PropTypes.func,\n    result: PropTypes.string,\n    sendWinResult: PropTypes.func,\n    unmarkedMineNum: PropTypes.number,\n    togglePlayingStatus: PropTypes.func,\n    startGame: PropTypes.func\n  }\n\n  static defaultProps = {\n    rowNum: 9,\n    mineNum: 16,\n    playing: false\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      minePane: initMinePaneState(initMinePane(props.rowNum, props.mineNum))\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { rowNum, mineNum, isStarted } = this.props\n    const isGradeChanged = () => prevProps.rowNum !== rowNum\n    const isReseted = () => prevProps.isStarted && !isStarted\n\n    if (isGradeChanged() || isReseted()) {\n      this.setState({\n        minePane: initMinePaneState(initMinePane(rowNum, mineNum))\n      })\n    }\n  }\n\n  openAround(i, j) {\n    this.open(i - 1, j - 1)\n    this.open(i - 1, j)\n    this.open(i - 1, j + 1)\n\n    this.open(i, j - 1)\n    this.open(i, j + 1)\n\n    this.open(i + 1, j - 1)\n    this.open(i + 1, j)\n    this.open(i + 1, j + 1)\n  }\n\n  openAll() {\n    const { rowNum } = this.props\n    const { minePane } = this.state\n\n    for (let i = 0; i < rowNum; i++) {\n      for (let j = 0; j < rowNum; j++) {\n        if (!minePane[i][j].open) minePane[i][j].open = true\n      }\n    }\n\n    this.setState({\n      minePane\n    })\n  }\n\n  isPositionInPane(i, j) {\n    const row = this.state.minePane[i]\n    return row !== undefined && row[j] !== undefined\n  }\n\n  isMarked(i, j) {\n    return Boolean(this.state.minePane[i][j].mark)\n  }\n\n  isOpened(i, j) {\n    return this.state.minePane[i][j].open\n  }\n\n  open(i, j, bubble = true) {\n    if (!this.isPositionInPane(i, j) || this.isOpened(i, j) || this.isMarked(i, j)) {\n      return\n    }\n\n    this.setState((prevState) => {\n      const { minePane } = prevState\n      minePane[i][j].open = true\n\n      return {\n        minePane\n      }\n    }, () => {\n      if (this.props.result === gameResults.WAIT) {\n        this.props.resetResult()\n      }\n      const { minePane } = this.state\n      const square = minePane[i][j].value\n      if (bubble && square === 0) {\n        this.openAround(i, j)\n      }\n    })\n  }\n\n  endGame() {\n    this.setState({\n      ended: true\n    })\n    this.props.togglePlayingStatus()\n  }\n\n  isFailed(i, j) {\n    return this.state.minePane[i][j].value === MINE_SIGN\n  }\n\n  onFail() {\n    this.openAll()\n    this.props.sendFailResult()\n    this.endGame()\n  }\n\n  isWinning() {\n    const unOpendSquaresNum = this.state.minePane.flat().filter((item) => !item.open).length\n\n    return unOpendSquaresNum === this.props.mineNum\n  }\n\n  onWin() {\n    this.props.sendWinResult()\n    this.endGame()\n    window.alert('win')\n  }\n\n  mark(i, j) {\n    const { FLAG, QUESTION } = markTypes\n    const { minePane } = this.state\n    let itemMark = minePane[i][j].mark\n\n    if (itemMark === null) {\n      if (this.props.unmarkedMineNum === 0) {\n        return\n      }\n      itemMark = FLAG\n      this.props.markMine()\n    } else if (itemMark === FLAG) {\n      itemMark = QUESTION\n      this.props.unmarkMine()\n    } else if (itemMark === QUESTION) {\n      itemMark = null\n    }\n    minePane[i][j].mark = itemMark\n\n    this.setState({\n      minePane\n    })\n  }\n\n  async handleSquareClick(i, j) {\n    if (this.isOpened(i, j) || this.isMarked(i, j)) {\n      return\n    }\n\n    if (!this.props.isStarted) {\n      this.props.startGame()\n    }\n\n    this.props.waitResult()\n    await sleep(200)\n\n    if (!this.isMarked(i, j) && this.isFailed(i, j)) {\n      this.onFail()\n      return\n    }\n\n    this.props.waitResult()\n\n    this.open(i, j)\n\n    if (!this.isMarked(i, j) && this.isWinning()) {\n      this.onWin()\n    }\n  }\n\n  handleSquareContextMenu(i, j, e) {\n    e.preventDefault()\n\n    if (!this.props.playing) {\n      this.props.startGame()\n    }\n    this.mark(i, j)\n  }\n\n  render() {\n    const paneGridStyle = {\n      display: 'grid',\n      gridTemplateColumns: `repeat(${this.props.rowNum}, 25px)`,\n      gridTemplateRows: `repeat(${this.props.rowNum}, 25px)`\n    }\n\n    const { WIN, FAIL } = gameResults\n    const { result } = this.props\n    const endedClass = result === WIN || result === FAIL ? 'ended' : ''\n\n    return (\n      <div\n        className={`mine-pane row-${this.props.rowNum} ${endedClass}`}\n        style={paneGridStyle}\n      >\n          {\n            this.state.minePane.map((row, rowIndex) => row.map((item, itemIndex) => (\n              <Square\n                  key={item.id}\n                  {...item}\n                  onSquareClick={() => { this.handleSquareClick(rowIndex, itemIndex) }}\n                  onSquareContextMenu={(e) => {\n                    this.handleSquareContextMenu(rowIndex, itemIndex, e)\n                  }}\n                />\n            )))\n          }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => state\n\nconst mapDispatchsToProps = (dispatch) => ({\n  unmarkMine() {\n    dispatch(actions.unmarkMine())\n  },\n  markMine() {\n    dispatch(actions.markMine())\n  },\n  waitResult() {\n    dispatch(actions.waitResult())\n  },\n  resetResult() {\n    dispatch(actions.resetResult())\n  },\n  sendFailResult() {\n    dispatch(actions.sendFailResult())\n  },\n  sendWinResult() {\n    dispatch(actions.sendWinResult())\n  },\n  togglePlayingStatus() {\n    dispatch(actions.togglePlayingStatus())\n  },\n  startGame() {\n    batch(() => {\n      dispatch(actions.togglePlayingStatus())\n      dispatch(actions.startGame())\n    })\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchsToProps)(MinePane)\n","import * as actionTypes from './action-types'\n\nexport const markMine = () => ({\n  type: actionTypes.MARK_MINE,\n  value: 1\n})\n\nexport const unmarkMine = () => ({\n  type: actionTypes.UNMARK_MINE,\n  value: 1\n})\n\nexport const waitResult = () => ({\n  type: actionTypes.WAIT_RESULT\n})\n\nexport const resetResult = () => ({\n  type: actionTypes.RESET_RESULT\n})\n\nexport const sendFailResult = () => ({\n  type: actionTypes.SEND_FAIL_RESULT\n})\n\nexport const sendWinResult = () => ({\n  type: actionTypes.SEND_WIN_RESULT\n})\n\nexport const setGameGrade = (grade) => ({\n  type: actionTypes.SET_GAME_GRADE,\n  value: grade\n})\n\nexport const togglePlayingStatus = () => ({\n  type: actionTypes.TOGGLE_PLAYING_STATUS\n})\n\nexport const resetGame = () => ({\n  type: actionTypes.RESET_GAME\n})\n\nexport const startGame = () => ({\n  type: actionTypes.START_GAME\n})\n","export const MARK_MINE = 'MARK_MINE'\n\nexport const UNMARK_MINE = 'UNMARK_MINE'\n\nexport const RESET_MINE_NUM = 'RESET_MINE_NUM'\n\nexport const WAIT_RESULT = 'WAIT_RESULT'\n\nexport const RESET_RESULT = 'RESET_RESULT'\n\nexport const SEND_FAIL_RESULT = 'SEND_FAIL_RESULT'\n\nexport const SEND_WIN_RESULT = 'SEND_WIN_RESULT'\n\nexport const SET_GAME_GRADE = 'SET_GAME_GRADE'\n\nexport const TOGGLE_PLAYING_STATUS = 'TOGGLE_PLAYING_STATUS'\n\nexport const RESET_GAME = 'RESET_GAME'\n\nexport const START_GAME = 'START_GAME'\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport digitalFont from 'resource/fonts/digital-7/digital-7-mono.ttf'\nimport './index.scss'\n\nconst StyleWrapper = styled.div`\n  @font-face {\n    font-family: 'digital';\n    src: url(${digitalFont});\n  }\n\n  .board {\n    font-family: digital;\n  }\n`\n\nfunction Board(props) {\n  return (\n    <StyleWrapper>\n      <div className=\"board\">\n        {props.content}\n      </div>\n    </StyleWrapper>\n  )\n}\n\nBoard.propTypes = {\n  content: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ])\n}\n\nexport default Board\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport Board from 'components/board'\nimport { paddingZero } from 'common/util'\nimport { gameResults } from 'common/config'\n\nconst MAX_TIME = 999\nlet timer = null\n\nfunction TimeBoard({ timing = false, result }) {\n  const [time, setTime] = useState(0)\n\n  useEffect(() => {\n    if (!timing && result === gameResults.NOT_YET) {\n      setTime(0)\n      clearTimeout(timer)\n      return\n    }\n\n    if (time >= MAX_TIME || !timing) {\n      clearTimeout(timer)\n      return\n    }\n\n    timer = setTimeout(() => {\n      setTime(time + 1)\n    }, 1000)\n  }, [timing, result, time])\n\n  return (\n    <div className=\"time-board\">\n      <Board content={paddingZero(time)} />\n    </div>\n  )\n}\n\nTimeBoard.propTypes = {\n  timing: PropTypes.bool,\n  result: PropTypes.string\n}\n\nTimeBoard.defaultProps = {\n  timing: false\n}\n\nconst mapStateToProps = (state) => ({\n  timing: state.playing,\n  result: state.result\n})\n\nexport default connect(mapStateToProps)(TimeBoard)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Board from 'components/board'\nimport { paddingZero } from 'common/util'\n\nfunction MineCounter(props) {\n  return (\n    <div className=\"mine-counter\">\n      <Board content={props.content} />\n    </div>\n  )\n}\n\nMineCounter.propTypes = {\n  content: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ])\n}\n\nMineCounter.defaultProps = {\n  content: 0\n}\n\nconst mapStateToProps = (state) => ({\n  content: paddingZero(state.unmarkedMineNum)\n})\n\nexport default connect(mapStateToProps)(MineCounter)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './index.scss'\n\nfunction GameResult(props) {\n  return (\n    <div className={`game-result game-result-${props.result}`} />\n  )\n}\n\nGameResult.propTypes = {\n  result: PropTypes.string\n}\n\nexport default GameResult\n","import { connect } from 'react-redux'\nimport GameResult from 'components/game-result'\n\n\nconst mapStateToProps = (state) => ({\n  result: state.result\n})\n\nexport default connect(mapStateToProps)(GameResult)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport './index.scss'\n\nfunction MenuItem(props) {\n  const [activeIndex, setActiveIndex] = useState(props.data.activeIndex)\n\n  const handleSubMenuClick = (item, index) => {\n    item.callback(props)\n    if (activeIndex !== undefined) setActiveIndex(index)\n  }\n\n  return (\n    <div className=\"menu-item\">\n      <div className=\"title\">{props.data.title}</div>\n      {\n        props.data.submenu\n          ? (\n            <div className=\"menu-sub\">\n                {\n                  props.data.submenu.map((item, index) => (\n                  <div\n                      className={`item ${activeIndex === index ? 'active' : ''}`}\n                    key={index}\n                      onClick={() => { handleSubMenuClick(item, index) }}\n                  >\n                    {item.title}\n                  </div>\n                  ))\n                }\n              </div>\n          )\n          : null\n      }\n    </div>\n  )\n}\n\nMenuItem.propTypes = {\n  data: PropTypes.object\n}\n\nMenuItem.defaultProps = {\n  data: {}\n}\n\nexport default MenuItem\n","import MenuItem from 'containers/menu-item'\nimport { connect, batch } from 'react-redux'\nimport { setGameGrade, resetGame } from 'store/action-creators'\nimport { gradeKeys } from 'common/config'\n\nconst { JUNIOR, MIDDLE, SENIOR } = gradeKeys\n\nconst menuItem = {\n  title: '等级',\n  activeInex: 0,\n  submenu: [\n    {\n      title: '初级',\n      callback: (props) => {\n        props.setGameGrade(JUNIOR)\n      }\n    },\n    {\n      title: '中级',\n      callback: (props) => {\n        props.setGameGrade(MIDDLE)\n      }\n    },\n    {\n      title: '高级',\n      callback: (props) => {\n        props.setGameGrade(SENIOR)\n      }\n    }\n  ]\n}\n\nconst mapStateToProps = (state) => {\n  const { grade } = state\n  menuItem.activeIndex = Object.keys(gradeKeys).indexOf(grade)\n\n  return {\n    data: menuItem\n  }\n}\n\nconst mapDispatchesToProps = (dispatch) => ({\n  setGameGrade(grade) {\n    batch(() => {\n      dispatch(setGameGrade(grade))\n      dispatch(resetGame())\n    })\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchesToProps)(MenuItem)\n","import MenuItem from 'containers/menu-item'\nimport { connect } from 'react-redux'\nimport { resetGame } from 'store/action-creators'\n\nconst menuItem = {\n  title: '游戏',\n  submenu: [\n    {\n      title: '重新开始',\n      callback: (props) => {\n        props.resetGame()\n      }\n    }\n  ]\n}\n\nconst mapStateToProps = () => ({\n  data: menuItem\n})\n\nconst mapDispatchesToProps = (dispatch) => ({\n  resetGame() {\n    dispatch(resetGame())\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchesToProps)(MenuItem)\n","import { deepCopy } from 'common/util'\nimport { gameResults, gameGrades } from 'common/config'\nimport * as actionTypes from './action-types'\n\nconst reducer = (state, action) => {\n  // Must do this, because the state couldn't be changed.\n  const newState = deepCopy(state)\n\n  switch (action.type) {\n    case actionTypes.UNMARK_MINE: {\n      newState.unmarkedMineNum++\n      return newState\n    }\n\n    case actionTypes.MARK_MINE: {\n      newState.unmarkedMineNum--\n      return newState\n    }\n\n    case actionTypes.WAIT_RESULT: {\n      newState.result = gameResults.WAIT\n      return newState\n    }\n\n    case actionTypes.RESET_RESULT: {\n      newState.result = gameResults.NOT_YET\n      return newState\n    }\n\n    case actionTypes.SEND_FAIL_RESULT: {\n      newState.result = gameResults.FAIL\n      return newState\n    }\n\n    case actionTypes.SEND_WIN_RESULT: {\n      newState.result = gameResults.WIN\n      return newState\n    }\n\n    case actionTypes.SET_GAME_GRADE: {\n      const grade = action.value\n      const { ROW_NUM, MINE_NUM } = gameGrades[grade]\n      newState.rowNum = ROW_NUM\n      newState.mineNum = MINE_NUM\n      newState.unmarkedMineNum = MINE_NUM\n      return newState\n    }\n\n    case actionTypes.TOGGLE_PLAYING_STATUS: {\n      newState.playing = !state.playing\n      return newState\n    }\n\n    case actionTypes.RESET_GAME: {\n      newState.playing = false\n      newState.unmarkedMineNum = newState.mineNum\n      newState.result = gameResults.NOT_YET\n      newState.isStarted = false\n      return newState\n    }\n\n    case actionTypes.START_GAME: {\n      newState.isStarted = true\n      return newState\n    }\n\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import { createStore } from 'redux'\nimport { gameResults, gameGrades, gradeKeys } from 'common/config'\nimport reducer from './reducer'\n\nconst defaultGrade = gradeKeys.JUNIOR\nconst { MINE_NUM, ROW_NUM } = gameGrades[defaultGrade]\n\nconst defaultState = {\n  grade: defaultGrade,\n  rowNum: ROW_NUM,\n  mineNum: MINE_NUM,\n  unmarkedMineNum: MINE_NUM,\n  result: gameResults.NOT_YET,\n  playing: false,\n  isStarted: false\n}\n\nconst store = createStore(\n  reducer,\n  defaultState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store\n","import React from 'react'\nimport './App.scss'\nimport { Provider } from 'react-redux'\nimport MinePane from 'containers/mine-pane'\nimport TimeBoard from 'containers/time-board'\nimport MineCounter from 'components/mine-counter'\nimport GameResult from 'containers/game-result'\nimport MenuItemGrade from 'containers/menu-item-grade'\nimport MenuItemGame from 'containers/menu-item-game'\nimport store from 'store'\n\nfunction App() {\n  document.body.addEventListener('contextmenu', (e) => { e.preventDefault() })\n\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <div className=\"panel\">\n          <div className=\"menu\">\n            <MenuItemGrade />\n            <MenuItemGame />\n          </div>\n          <div className=\"status border\">\n            <MineCounter />\n            <GameResult />\n            <TimeBoard />\n          </div>\n          <MinePane/>\n        </div>\n      </div>\n    </Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}